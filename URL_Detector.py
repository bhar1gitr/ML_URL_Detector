# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWJCuhrp0MTK8FY2P18kjr6mYhOG_dQw
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

df = pd.read_csv('phishing_site_urls.csv')
df = df.dropna()
df

# X = df['URL']
# Y = df['Label']
df.info

df

df.loc[df['Label'] =='bad','Label',] = 0
df.loc[df['Label'] =='good','Label',] = 1

df

X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size=0.2,random_state=3)
feature_extraction = TfidfVectorizer(min_df=1, stop_words='english', lowercase=True)

X_train_features = feature_extraction.fit_transform(X_train)
X_test_features = feature_extraction.transform(X_test)

X_train_features

X_test_features

Y_train = Y_train.astype('int')
Y_test = Y_test.astype('int')

model = LogisticRegression()

model.fit(X_train_features,Y_train)

prediction_on_traning_data = model.predict(X_train_features)

prediction_on_traning_data

accuracy_on_traning_data = accuracy_score(Y_train,prediction_on_traning_data)

accuracy_on_traning_data

prediction_on_test_data = model.predict(X_test_features)
accuraccy_on_test = accuracy_score(Y_test,prediction_on_test_data)

accuraccy_on_test

# input_your_Url = ["iamlouder.info/login.verizonwireless.com.amserver.UI.Login.onlineaccounts.upgrade.online.billing.account.update/e35ad3bc2e2bdf0969b9e18152147b6d/"]
input_your_Url= ["https://colab.research.google.com/"]

input_data_features = feature_extraction.transform(input_your_Url)
prediction = model.predict(input_data_features)
if(prediction[0] == 1):
  print('Safe URL to use!!!');
else:
  print('URL is not safe!!!');

